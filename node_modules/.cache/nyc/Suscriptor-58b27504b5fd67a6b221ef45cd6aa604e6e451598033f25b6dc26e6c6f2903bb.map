{"version":3,"file":"/home/usuario/practicas/23mar/23MarzoPE103/src/Suscriptor.ts","sources":["/home/usuario/practicas/23mar/23MarzoPE103/src/Suscriptor.ts"],"names":[],"mappings":";;;AACA,uCAAiC;AAEjC;;GAEG;AACH,MAAa,UAAU;IAaC;IAAwB;IAA0B;IAAsB;IAZpF,OAAO,CAAS;IAChB,SAAS,CAAS;IAClB,KAAK,CAAS;IACd,MAAM,CAAS;IAEvB;;;;;;OAMG;IACH,YAAoB,MAAc,EAAU,QAAgB,EAAU,IAAY,EAAU,KAAa;QAArF,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAQ;QACrG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,SAAS;QACL,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,WAAW;QACP,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,OAAO;QACH,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,UAAsB;QACzB,IAAI,UAAU,YAAY,iBAAO,EAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,CAAC,SAAS,EAAE,iEAAiE,UAAU,CAAC,eAAe,EAAE,kBAAkB,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;SAClM;IACL,CAAC;CACJ;AA7DD,gCA6DC","sourcesContent":["import {Observable, Observer} from \"./Observer\"\nimport {Revista} from \"./Revista\"\n\n/**\n * Clase de Suscriptor\n */\nexport class Suscriptor implements Observer{\n    private _nombre: string;\n    private _apellido: string;\n    private _edad: number;\n    private _email: string;\n\n    /**\n     * Constructor de Suscriptor\n     * @param nombre \n     * @param apellido \n     * @param edad \n     * @param email \n     */\n    constructor(private nombre: string, private apellido: string, private edad: number, private email: string){\n        this._nombre = nombre;\n        this._apellido = apellido;\n        this._edad = edad;\n        this._email = email;\n    }\n\n    /**\n     * Devuelve el nombre\n     * @returns Nombre\n     */\n    getNombre(): string{\n        return this._nombre;\n    }\n\n    /**\n     * Devuelve el apellido\n     * @returns Apellido\n     */\n    getApellido(): string{\n        return this._apellido;\n    }\n\n    /**\n     * Devuelve la edad\n     * @returns Edad\n     */\n    getEdad(): number{\n        return this._edad;\n    }\n\n    /**\n     * Devuelve el email\n     * @returns Email\n     */\n    getEmail(): string{\n        return this._email;\n    }\n\n    /**\n     * Notificacion de los usuarios con una nueva revista\n     * @param observable \n     */\n    update(observable: Observable){\n        if (observable instanceof Revista){\n            console.log(`Soy un suscriptor llamado ${this.getNombre()} y he recibido la notificación de que se ha lanzado el número ${observable.getUltimoNumero()} de la revista ${observable.getName()}`)\n        }\n    }\n}"]}